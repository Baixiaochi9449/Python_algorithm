/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 //浅显的思路：找到最大深度和最小深度
class Solution {
int traversal(TreeNode* node){
    if(node==nullptr) return 0;
    
    int leftheight=traversal(node->left);
    int rightheight=traversal(node->right);
    if(leftheight==-1) return -1;
    if(rightheight==-1) return -1;

    if(abs(leftheight-rightheight)>1) return -1;
    else return 1+max(leftheight,rightheight); 
}

public:
    bool isBalanced(TreeNode* root) {
        if(traversal(root)==-1) return false;
        else return true;
    }
};